/*!build time : 2014-12-25 3:54:02 PM*/
KISSY.add("kg/datalazyload/2.0.2/index",function(a,b,c,d,e){function f(a){var b,c,d,e=[];return function(f,g){return 0===g||g||(g=1),1&g&&!c&&(c=!0,a(function(a){for(b=a;d=e.shift();)try{d&&d.apply(null,[b])}catch(c){setTimeout(function(){throw c},0)}})),b?(f&&f.apply(null,[b]),b):(2&g||f&&e.push(f),b)}}function g(b,c,d){function e(){f&&(f.cancel(),f=0),g=a.now(),b.apply(d||this,arguments),h=a.now()}var f,g=0,h=0,c=c||150;return a.mix(function(){!g||h>=g&&a.now()-h>c||g>h&&a.now()-g>8*c?e():(f&&f.cancel(),f=a.later(e,c,0,null,arguments))},{stop:function(){f&&(f.cancel(),f=0)}})}function h(c,d,e){c.style.display=u,c.className="";var f=b.create("<div>");c.parentNode.insertBefore(f,c);var g=c.value;if(a.isFunction(e)){var h=e({type:"textarea",elem:c,value:g});h&&(g=h)}return b.html(f,g,d),f}function i(a){return a._ks_lazy_width?a._ks_lazy_width:a._ks_lazy_width=b.outerWidth(a)}function j(a){return a._ks_lazy_height?a._ks_lazy_height:a._ks_lazy_height=b.outerHeight(a)}function k(a,c,d){if(!a.offsetWidth)return!1;var e,f=b.offset(a),g=!0,h=f.left,k=f.top,l={left:h,top:k,right:h+i(a),bottom:k+j(a)};return e=m(c,l),e&&d&&(g=m(d,l)),g&&e}function l(b,c){var d=this;if(!(d instanceof l))return new l(b,c);var e=b;a.isPlainObject(e)||(e=c||{},b&&(e.container=b)),l.superclass.constructor.call(d,e),d._callbacks={},d._containerIsNotDocument=9!=d.get("container").nodeType,a.isArray(e.container)&&(d._backCompact=1),d._initLoadEvent(),e.container&&d.addElements(e.container),d._loadFn(),a.ready(function(){d._loadFn()}),d.resume()}function m(a,b){var c={};return c.top=Math.max(a.top,b.top),c.bottom=Math.min(a.bottom,b.bottom),c.left=Math.max(a.left,b.left),c.right=Math.min(a.right,b.right),c.bottom>=c.top&&c.right>=c.left}function n(c,d,e,f){"img-src"===d&&(d="img"),a.isArray(c)||(c=[b.get(c)]);var g=new l(p,{});g.set("imgFlag",e||q+s),g.set("areaFlag",e||r+s),g.set("onStart",f),g.set("force",!0),g.addElements(c,d)}var o=a.Env.host,p=o.document,q="data-ks-lazyload",r="ks-datalazyload",s="-custom",t="default",u="none",v="scroll",w="touchmove",x="resize",y=100,z=0,A=function(b,c,d,e){function f(a){b.src!=a&&(b.src=a),b.removeAttribute(c)}c=c||q;var g=b.getAttribute(c),h={type:"img",elem:b,src:g},i=!a.isFunction(d)||d(h)!==!1;i&&h.src&&(a.isFunction(e)?a.use("./plugin/webp",function(a,b){b.isSupport(function(a){f(a?e(h.src):h.src)})}):f(h.src))};return l.ATTRS={diff:{value:t},placeholder:{value:"//g.alicdn.com/s.gif"},execScript:{value:!0},container:{setter:function(c){return c=c||p,a.isWindow(c)?c=c.document:(c=b.get(c),"body"==b.nodeName(c)&&(c=c.ownerDocument)),c},valueFn:function(){return p}},autoDestroy:{value:!0},onStart:{value:null}},a.extend(l,d,{_initLoadEvent:function(){var b=this,c=b.get("autoDestroy");b.imgHandle=function(){A(this,b.get("imgFlag"),b.get("onStart"),b.get("webpReplacer"))},b.textareaHandle=function(){b.addElements(h(this,b.get("execScript"),b.get("onStart")))},b._loadFn=g(function(){c&&0==b._counter&&a.isEmptyObject(b._callbacks)&&b.destroy(),b._loadItems()},y,b)},refresh:function(){this._loadFn()},_loadItems:function(){var b=this,c=b.get("container");(!b._containerIsNotDocument||c.offsetWidth)&&(b._windowRegion=b._getBoundingRect(),!b._backCompact&&b._containerIsNotDocument&&(b._containerRegion=b._getBoundingRect(b.get("container"))),a.each(b._callbacks,function(a,c){a&&b._loadItem(c,a)}))},_loadItem:function(a,b){var c=this,b=b||c._callbacks[a];if(!b)return!0;var d=b.el,e=!1,f=b.fn;if(c.get("force")||k(d,c._windowRegion,c._containerRegion))try{e=f.call(d)}catch(g){setTimeout(function(){throw g},0)}return e!==!1&&delete c._callbacks[a],e},addCallback:function(c,d){c=b.get(c);var e=this,f=e._callbacks,g={el:c||document,fn:d||a.noop},h=++z;f[h]=g,e._windowRegion?e._loadItem(h,g):e.refresh()},removeCallback:function(c,d){c=b.get(c);var e=this._callbacks;a.each(e,function(a,b){a.el==c&&(d?a.fn==d:1)&&delete e[b]})},getElements:function(){var b=this,c=[],d=[],e=b._callbacks;return a.each(e,function(a){a.fn==b.imgHandle&&c.push(a.el),a.fn==b.textareaHandle&&d.push(a.el)}),{images:this._images,textareas:this._textareas}},addElements:function(c,d){"string"==typeof c?c=b.query(c):a.isArray(c)||(c=[c]);var e=this;e._counter=e._counter||0,a.each(c,function(c){d&&"img"!==d||a.each(a.filter([c].concat(b.query("img",c)),function(a){return a.getAttribute&&a.getAttribute(e.get("imgFlag")||q)},e),function(a){e.onPlaceHolder=e.onPlaceHolder||f(function(a){var b=new Image,c=e.get("placeholder");b.src=c,b.onload=b.onerror=function(){a(c)}}),a.offsetWidth?e.addCallback(a,e.imgHandle):(e._counter++,a.onload=function(){e._counter--,e.addCallback(a,e.imgHandle)},a.src||e.onPlaceHolder(function(b){a.src||(a.src=b)}))}),d&&"textarea"!==d||a.each(b.query("textarea."+(e.get("areaFlag")||r),c),function(a){e.addCallback(a,e.textareaHandle)})})},removeElements:function(c){"string"==typeof c?c=b.query(c):a.isArray(c)||(c=[c]);var d=this,e=d._callbacks;a.each(e,function(b,d){a.inArray(b.el,c)&&delete e[d]})},_getBoundingRect:function(c){var d,f,g,h;if(c!==e){d=b.outerHeight(c),f=b.outerWidth(c);var i=b.offset(c);g=i.left,h=i.top}else d=b.viewportHeight(),f=b.viewportWidth(),g=b.scrollLeft(),h=b.scrollTop();var j=this.get("diff"),k=j===t?f:j,l=0,m=k,n=j===t?d:j,o=0,p=n,q=g+f,r=h+d;return a.isObject(j)&&(l=j.left||0,m=j.right||0,o=j.top||0,p=j.bottom||0),g-=l,q+=m,h-=o,r+=p,{left:g,top:h,right:q,bottom:r}},pause:function(){var a=this,b=a._loadFn;if(!a._destroyed&&(c.remove(o,v,b),c.remove(o,w,b),c.remove(o,x,b),b.stop(),a._containerIsNotDocument)){var d=a.get("container");c.remove(d,v,b),c.remove(d,w,b)}},resume:function(){var a=this,b=a._loadFn;if(!a._destroyed&&(c.on(o,v,b),c.on(o,w,b),c.on(o,x,b),a._containerIsNotDocument)){var d=a.get("container");c.on(d,v,b),c.on(d,w,b)}},destroy:function(){var b=this;b.pause(),b._callbacks={},a.log("datalazyload is destroyed!"),b.fire("destroy"),b._destroyed=1}}),l.loadCustomLazyData=n,a.DataLazyload=l,l},{requires:["dom","event","base"]});!function(){function n(n,r,t){var e,i,o,a,f;e=function(n){function r(){var n="";for(var r in e)n+=r+"|";return n=n.slice(0,-1),o=new RegExp(n,"g")}var t,e={"&":"&amp;",">":"&gt;","<":"&lt;","`":"&#x60;","/":"&#x2F;",'"':"&quot;","'":"&#x27;"},i=/[&<>"'`]/,o=r(),a=/\\?\{([^{}]+)\}/g,f="undefined"!=typeof global?global:window,u=Object.prototype.toString;return n=t={isArray:Array.isArray||function(n){return"[object Array]"===u.call(n)},keys:Object.keys||function(n){var r,t=[];for(r in n)n.hasOwnProperty(r)&&t.push(r);return t},each:function(n,r,e){if(n){var i,o,a,f=0,u=n&&n.length,s=void 0===u||"[object Function]"===Object.prototype.toString.call(n);if(e=e||null,s)for(a=t.keys(n);f<a.length&&(i=a[f],r.call(e,n[i],i,n)!==!1);f++);else for(o=n[0];u>f&&r.call(e,o,f,n)!==!1;o=n[++f]);}return n},mix:function(n,r){if(r)for(var t in r)n[t]=r[t];return n},globalEval:function(n){f.execScript?f.execScript(n):!function(n){f.eval.call(f,n)}(n)},substitute:function(n,r,t){return"string"==typeof n&&r?n.replace(t||a,function(n,t){return"\\"===n.charAt(0)?n.slice(1):void 0===r[t]?"":r[t]}):n},escapeHtml:function(n){return n=""+n,i.test(n)?(n+"").replace(o,function(n){return e[n]}):n},merge:function(){for(var n=0,r=arguments.length,e={};r>n;n++){var i=arguments[n];i&&t.mix(e,i)}return e}}}(),i=function(n){function r(n,r,t){this.data=void 0!==n?n:{},t?(this.parent=t,this.root=t.root):(this.parent=void 0,this.root=this),this.affix=r||{},this.ready=!1}return r.prototype={isScope:1,constructor:r,setParent:function(n){this.parent=n,this.root=n.root},set:function(n,r){this.affix[n]=r},setData:function(n){this.data=n},getData:function(){return this.data},mix:function(n){var r=this.affix;for(var t in n)r[t]=n[t]},get:function(n){var r,t=this.data,e=this.affix;return null!=t&&(r=t[n]),void 0!==r?r:e[n]},resolveInternalOuter:function(n){var r,t=n[0],e=this,i=e;if("this"===t)r=e.data;else if("root"===t)i=i.root,r=i.data;else{if(!t)return[i.data];do r=i.get(t);while(void 0===r&&(i=i.parent))}return[void 0,r]},resolveInternal:function(n){var r=this.resolveInternalOuter(n);if(1===r.length)return r[0];var t,e=n.length,i=r[1];if(void 0===i)return void 0;for(t=1;e>t;t++){if(null==i)return i;i=i[n[t]]}return i},resolveLooseInternal:function(n){var r=this.resolveInternalOuter(n);if(1===r.length)return r[0];var t,e=n.length,i=r[1];for(t=1;null!=i&&e>t;t++)i=i[n[t]];return i},resolveUp:function(n){return this.parent&&this.parent.resolveInternal(n)},resolveLooseUp:function(n){return this.parent&&this.parent.resolveLooseInternal(n)},resolveOuter:function(n,r){var t,e=this,i=e;if(!r&&1===n.length){if(t=e.get(n[0]),void 0!==t)return[t];r=1}if(r)for(;i&&r--;)i=i.parent;return i?[void 0,i]:[void 0]},resolveLoose:function(n,r){var t=this.resolveOuter(n,r);return 1===t.length?t[0]:t[1].resolveLooseInternal(n)},resolve:function(n,r){var t=this.resolveOuter(n,r);return 1===t.length?t[0]:t[1].resolveInternal(n)}},n=r}(),o=function(n){function r(n,r,t){this.list=n,this.init(),this.next=r,this.ready=!1,this.tpl=t}function t(n,t){var e=this;e.config=t,e.head=new r(e,void 0),e.callback=n,this.init()}var i=e;return r.prototype={constructor:r,isBuffer:1,init:function(){this.data=""},append:function(n){return this.data+=n,this},write:function(n){if(null!=n){if(n.isBuffer)return n;this.data+=n}return this},writeEscaped:function(n){if(null!=n){if(n.isBuffer)return n;this.data+=i.escapeHtml(n)}return this},insert:function(){var n=this,t=n.list,e=n.tpl,i=new r(t,n.next,e),o=new r(t,i,e);return n.next=o,n.ready=!0,o},async:function(n){var r=this.insert(),t=r.next;return n(r),t},error:function(n){var r=this.list.callback;if(r){var t=this.tpl;if(t){n instanceof Error||(n=new Error(n));var e=t.name,i=t.pos.line,o="XTemplate error in file: "+e+" at line "+i+": ";n.stack=o+n.stack,n.message=o+n.message,n.xtpl={pos:{line:i},name:e}}this.list.callback=null,r(n,void 0)}},end:function(){var n=this;return n.list.callback&&(n.ready=!0,n.list.flush()),n}},t.prototype={constructor:t,init:function(){this.data=""},append:function(n){this.data+=n},end:function(){this.callback(null,this.data),this.callback=null},flush:function(){for(var n=this,r=n.head;r;){if(!r.ready)return n.head=r,void 0;this.data+=r.data,r=r.next}n.end()}},t.Buffer=r,n=t}(),a=function(n){var r=i,t=e,o={range:function(n,r){var t=r.params,e=t[0],i=t[1],o=t[2];o?(e>i&&o>0||i>e&&0>o)&&(o=-o):o=e>i?-1:1;for(var a=[],f=e;i>e?i>f:f>i;f+=o)a.push(f);return a},"void":function(){return void 0},foreach:function(n,t,e){var i,o,a,f,u=t.params,s=u[0],l=u[2]||"xindex",c=u[1];if(s)for(i=s.length,f=0;i>f;f++)o=new r(s[f],{xcount:i,xindex:f},n),a=o.affix,"xindex"!==l&&(a[l]=f,a.xindex=void 0),c&&(a[c]=s[f]),e=t.fn(o,e);return e},forin:function(n,t,e){var i,o,a,f=t.params,u=f[0],s=f[2]||"xindex",l=f[1];if(u)for(a in u)i=new r(u[a],{xindex:a},n),o=i.affix,"xindex"!==s&&(o[s]=a,o.xindex=void 0),l&&(o[l]=u[a]),e=t.fn(i,e);return e},each:function(n,r,e){var i=r.params,a=i[0];return a?t.isArray(a)?o.foreach(n,r,e):o.forin(n,r,e):e},"with":function(n,t,e){var i=t.params,o=i[0];if(o){var a=new r(o,void 0,n);e=t.fn(a,e)}return e},"if":function(n,r,t){var e=r.params,i=e[0];if(i){var o=r.fn;o&&(t=o(n,t))}else{var a=!1,f=r.elseIfs,u=r.inverse;if(f)for(var s=0,l=f.length;l>s;s++){var c=f[s];if(a=c.test(n)){t=c.fn(n,t);break}}!a&&u&&(t=u(n,t))}return t},set:function(n,r,t){for(var e=r.hash,i=e.length,o=0;i>o;o++){var a=e[o],f=a.key,u=a.depth,s=a.value;if(1===f.length){for(var l=n.root;u&&l!==n;)n=n.parent,--u;n.set(f[0],s)}else{var c=n.resolve(f.slice(0,-1),u);c&&(c[f[f.length-1]]=s)}}return t},include:1,parse:1,extend:1,block:function(n,r,t){var e,i=this,o=i.runtime,a=r.params,f=a[0];2===a.length&&(e=a[0],f=a[1]);var u,s=o.blocks=o.blocks||{},l=s[f],c={fn:r.fn,type:e};if(l){if(l.type)if("append"===l.type)c.next=l,s[f]=c;else if("prepend"===l.type){var d;for(u=l;u&&"prepend"===u.type;)d=u,u=u.next;c.next=u,d.next=c}}else s[f]=c;if(!o.extendTpl)for(u=s[f];u;)u.fn&&(t=u.fn.call(i,n,t)),u=u.next;return t},macro:function(n,t,e){var i=t.hash,o=t.params,a=o[0],f=o.slice(1),u=this,s=u.runtime,l=s.macros=s.macros||{},c=l[a];if(t.fn)l[a]={paramNames:f,hash:i,fn:t.fn};else if(c){var d,v=c.hash||{};if(d=c.paramNames)for(var h=0,p=d.length;p>h;h++){var m=d[h];v[m]=f[h]}if(i)for(var g in i)v[g]=i[g];var x=new r(v);x.root=n.root,e=c.fn.call(u,x,e)}else{var y="can not find macro: "+a;e.error(y)}return e}};return o["debugger"]=function(){},n=o}(),f=function(n){function r(n,r,t,e,i,o,a,f){this.name=n,this.originalName=o||n,this.runtime=r,this.root=t,this.pos={line:1},this.scope=e,this.buffer=i,this.fn=a,this.parent=f}function t(n,r,t){var e=t[0],i=n&&n[e]||r&&r[e]||x[e];if(1===t.length)return i;if(i)for(var o=t.length,a=1;o>a;a++)if(i=i[t[a]],!i)return!1;return i}function f(n,r){var t=n.split("/"),e=r.split("/");t.pop();for(var i=0,o=e.length;o>i;i++){var a=e[i];"."===a||(".."===a?t.pop():t.push(a))}return t.join("/")}function u(n,r,e,i,o,a){var f,u,s;if(a||(s=t(n.runtime.commands,n.root.config.commands,o)),s)return s.call(n,r,e,i);if(s!==!1){var l=o.slice(0,-1);if(f=r.resolve(l,a),null==f)return i.error("Execute function `"+o.join(".")+"` Error: "+l.join(".")+" is undefined or null"),i;if(u=f[o[o.length-1]])try{return u.apply(f,e.params||[])}catch(c){return i.error("Execute function `"+o.join(".")+"` Error: "+c.message),i}}return i.error("Command Not Found: "+o.join(".")),i}function s(n,r){var t=this;t.fn=n,t.config=m.merge(s.globalConfig,r),this.subNameResolveCache={}}function l(n,r,t){if("."!==r.charAt(0))return r;var e=t+"_ks_"+r,i=n.subNameResolveCache,o=i[e];return o?o:r=i[e]=f(t,r)}function c(n,r,t,e,i,o){var a=l(n,o,i.name),f=e.insert(),u=f.next;return v(n,a,i.runtime,r,f,o,t,e.tpl),u}function d(n,t,e,i,o){var a=e.insert(),f=a.next,u=new r(o.TPL_NAME,i.runtime,n,t,a,void 0,o,e.tpl);return a.tpl=u,h(u),f}function v(n,t,e,i,o,a,f,u){var s=new r(t,e,n,i,o,a,void 0,u);o.tpl=s,n.config.loader.load(s,function(n,r){"function"==typeof r?(s.fn=r,h(s)):n?o.error(n):(r=r||"",f?o.writeEscaped(r):o.data+=r,o.end())})}function h(n){var r=n.fn();if(r){var t,e=n.runtime,i=e.extendTpl;if(i&&(t=i.params[0],!t))return r.error("extend command required a non-empty parameter");var o=e.extendTplFn,a=e.extendTplBuffer;return o?(e.extendTpl=null,e.extendTplBuffer=null,e.extendTplFn=null,d(n.root,n.scope,a,n,o).end()):t&&(e.extendTpl=null,e.extendTplBuffer=null,c(n.root,n.scope,0,a,n,t).end()),r.end()}}function p(n,r,t){var e=r.params;if(!e[0])return t.error("include command required a non-empty parameter");var i=n,o=e[1],a=r.hash;return a&&(o=o?m.mix({},o):{},m.mix(o,a)),o&&(i=new y(o,void 0,n)),i}var m=e,g=a,x={},y=i,w=o,b={callFn:u,callDataFn:function(n,r){for(var t=r[0],e=t,i=1;i<r.length;i++){var o=r[i];if(!e||null==e[o])return"";t=e,e=e[o]}return e.apply(t,n||[])},callCommand:function(n,r,t,e,i){return u(n,r,t,e,i)}};return m.mix(s,{config:function(n,r){var t=this.globalConfig=this.globalConfig||{};return arguments.length?(void 0!==r?t[n]=r:m.mix(t,n),void 0):t},nativeCommands:g,utils:b,util:m,addCommand:function(n,r){x[n]=r},removeCommand:function(n){delete x[n]}}),s.prototype={constructor:s,Scope:y,nativeCommands:g,utils:b,removeCommand:function(n){var r=this.config;r.commands&&delete r.commands[n]},addCommand:function(n,r){var t=this.config;t.commands=t.commands||{},t.commands[n]=r},include:function(n,r,t,e){return c(this,p(n,r,t),r.escape,t,e,r.params[0])},includeModule:function(n,r,t,e){return d(this,p(n,r,t),t,e,r.params[0])},render:function(n,t,e){var i="",o=this,a=o.fn,f=o.config;"function"==typeof t&&(e=t,t=null),t=t||{},e=e||function(n,r){if(n)throw n instanceof Error||(n=new Error(n)),n;i=r};var u=o.config.name;!u&&a&&a.TPL_NAME&&(u=a.TPL_NAME);var l;l=n instanceof y?n:new y(n);var c=new s.LinkedBuffer(e,f).head,d=new r(u,{commands:t.commands},o,l,c,u,a);return c.tpl=d,a?(h(d),i):(f.loader.load(d,function(n,r){r?(d.fn=o.fn=r,h(d)):n&&c.error(n)}),i)}},s.Scope=y,s.LinkedBuffer=w,n=s}(),t.exports=f}if(window.KISSY)KISSY.add("kg/xtemplate/4.3.0/runtime",[],function(r,t,e,i){n(t,e,i)});else{if(!window.define)throw new Error("Can't found any module manager, such like Kissy CMD AMD SeaJS and etc.");define("kg/xtemplate/4.3.0/runtime",[],n)}}();define("kg/xctrl/6.6.0/xctrl-kissy", ["io","json"], function(require, exports, module) {
var io = require("io");
var json = require("json");
/*
combined files by gulp-kissy:

kg/xctrl/6.6.0/xctrl-kissy
kg/xctrl/6.6.0/src/mod/baseApi-kissy
kg/xctrl/6.6.0/src/baseApi
kg/xctrl/6.6.0/src/base
kg/xctrl/6.6.0/src/api
kg/xctrl/6.6.0/src/getHelper
*/
var kgXctrl660SrcBaseApi, kgXctrl660SrcGetHelper, kgXctrl660SrcModBaseApiKissy, kgXctrl660SrcApi, kgXctrl660SrcBase, kgXctrl660XctrlKissy;
kgXctrl660SrcBaseApi = function (exports) {
  'use strict';
  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === 'function' && obj.constructor === Symbol ? 'symbol' : typeof obj;
  };
  var BaseApi = {};
  BaseApi.isString = function (str) {
    return typeof str == 'string' && str.constructor == String;
  };
  BaseApi.isArray = function (obj) {
    if (obj == null) {
      return false;
    } else {
      return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object' && obj.constructor == Array;
    }
  };
  BaseApi.isFunction = function (obj) {
    return typeof obj == 'function' && obj.constructor == Function;
  };
  BaseApi.trim = function (str) {
    var str = str.replace(/^\s+/, '');
    for (var i = str.length - 1; i >= 0; i--) {
      if (/\S/.test(str.charAt(i))) {
        str = str.substring(0, i + 1);
        break;
      }
    }
    return str;
  };
  BaseApi.inArray = function (elem, array, i) {
    var len;
    if (array) {
      if (Array.prototype.indexOf) {
        return Array.prototype.indexOf.call(array, elem, i);
      }
      len = array.length;
      i = i ? i < 0 ? Math.max(0, len + i) : i : 0;
      for (; i < len; i++) {
        if (i in array && array[i] === elem) {
          return i;
        }
      }
    }
    return -1;
  };
  exports = BaseApi;
  return exports;
}();
kgXctrl660SrcGetHelper = function (exports) {
  'use strict';
  var defaultConfig = {
    request: {
      merge: {
        maxBlock: 20,
        maxCount: 80,
        maxTime: 300,
        outTime: 100
      },
      jsonp: { callback: 'callback' },
      url: '',
      backupUrl: '',
      parameters: {},
      split: ',;|'
    },
    response: {
      convert: {},
      path: ''
    }
  };
  var BaseApi;
  function GetHelper(conf) {
    BaseApi = window.XctrlBaseApi || {};
    this.init(conf);
  }
  GetHelper.prototype = {
    init: function init(conf) {
      var self = this;
      self.conf = BaseApi.merge(conf, BaseApi.clone(defaultConfig));
      BaseApi.mix(self.conf, conf, true, null, true);
      if (self.conf.request.merge && self.conf.request.mergeKey) {
        self._path = self.conf.request.mergeKey.split('>');
      }
      self._init();
    },
    _init: function _init() {
      var self = this;
      self._stack = [];
      self._resultSuccess = {};
      self._block = {};
      self._count = 0;
      self._blockCount = 0;
      self._startTime = null;
    },
    _val: function _val(para, key) {
      return key.replace(/\$\{([^}]*)\}/g, function (str, v) {
        return para[v] || '';
      });
    },
    _valResponse: function _valResponse(para, key) {
      return key.replace(/@\{([^}]*)\}/g, function (str, v) {
        return para[v];
      });
    },
    countItem: function countItem() {
      var self = this;
      return self.conf.request.mergeCount;
    },
    _paraTr: function _paraTr(para, parameters) {
      var self = this;
      var result = {};
      for (var v in parameters) {
        if (parameters.hasOwnProperty(v)) {
          result[v] = self._val(para, parameters[v]);
        }
      }
      return result;
    },
    push: function push(paraItem, cb, cfg) {
      var self = this;
      var request = self.conf.request;
      var merge = request.merge;
      var mergeKey = request.mergeKey;
      var mergeCount = request.mergeCount;
      var path = self._path;
      var parameters = request.parameters;
      var para;
      var stack = {
        para: paraItem,
        cb: cb,
        dycfg: cfg || {}
      };
      var needMerge;
      para = self._paraTr(paraItem, parameters);
      para = BaseApi.merge(para, paraItem);
      if (cfg) {
        needMerge = merge && mergeKey && cfg.merge;
      } else {
        needMerge = merge && mergeKey;
      }
      if (cfg.request) {
        needMerge = false;
      }
      if (needMerge) {
        self._startTime = self._startTime || new Date();
        if (mergeCount) {
          if (para[mergeCount] == '') {
            stack.count = '';
          } else {
            stack.count = parseInt(para[mergeCount], 10);
          }
          if (self._count + stack.count > merge.maxCount && self._count > 0) {
            self._do();
          }
          self._count += stack.count;
        }
        var block = self._block;
        var blockNew = false;
        for (var i = 0; i < path.length; i += 1) {
          var pathResult = para[path[i]];
          if (i + 1 === path.length) {
            if (block[pathResult]) {
              var t = false;
              for (var j = 0, jLen = block[pathResult].length; j < jLen; j++) {
                if (block[pathResult][j] !== para[j] && (mergeCount ? i !== mergeCount : false)) {
                  t = true;
                  return false;
                }
                return true;
              }
              if (t) {
                self._do();
                self.push(paraItem, cb);
                return self;
              }
              if (mergeCount) {
                block[pathResult][mergeCount] += para[mergeCount] ? parseInt(para[mergeCount], 10) : '';
              }
            } else {
              var temp_data = {};
              for (var v in para) {
                if (para.hasOwnProperty(v)) {
                  if (BaseApi.inArray(v, path) < 0) {
                    if (mergeCount === v) {
                      temp_data[v] = para[v] ? parseInt(para[v], 10) : '';
                    } else {
                      temp_data[v] = para[v];
                    }
                  }
                }
              }
              block[pathResult] = temp_data;
              blockNew = true;
            }
          } else {
            if (!block[pathResult]) {
              block[pathResult] = {};
              blockNew = true;
            }
            block = block[pathResult];
          }
        }
        self._stack.push(stack);
        if (blockNew) {
          self._blockCount += 1;
          if (self._blockCount >= merge.maxBlock) {
            self._do();
            return self;
          }
        }
        if (new Date() - self._startTime > merge.maxTime) {
          self._do();
        } else {
          clearTimeout(self._timer);
          self._timer = setTimeout(function () {
            self._do();
          }, merge.outTime);
        }
      } else {
        var arr = [];
        arr.push(stack);
        self._do(para, arr);
      }
      return self;
    },
    _getPara: function _getPara() {
      var self = this, request = self.conf.request, path = self._path, splits = request.split.split(''), splitsLength = path.length;
      var block = self._block;
      var paraFn = function paraFn(path, block, level) {
        var result = {};
        result[path[0]] = [];
        if (path.length > 1) {
          for (var p in block) {
            if (block.hasOwnProperty(p)) {
              result[path[0]].push(p);
              var er = paraFn(path.slice(1), block[p], level + 1);
              for (var e in er) {
                if (er.hasOwnProperty(e)) {
                  if (!result[e]) {
                    result[e] = [];
                  }
                  result[e].push(er[e]);
                }
              }
            }
          }
        } else {
          var arri = 0;
          for (var v in block) {
            if (block.hasOwnProperty(v)) {
              result[path[0]].push(v);
              var arrj = 0;
              for (var z in block[v]) {
                if (block[v].hasOwnProperty(z)) {
                  if (!result[z]) {
                    result[z] = [];
                  }
                  result[z][arri] = block[v][z];
                  arrj++;
                }
              }
            }
            arri++;
          }
          for (var m in result) {
            if (result[m].length !== arri) {
              result[m].length = arri;
            }
          }
        }
        for (var r in result) {
          if (result.hasOwnProperty(r)) {
            result[r] = result[r].join(splits[splitsLength - level - 1]);
          }
        }
        return result;
      };
      return paraFn(path, block, 0);
    },
    _do: function _do(para, arr) {
      var self = this;
      var stack = arr || self._stack;
      var strPara = BaseApi.JSON.stringify(para);
      self[strPara] = false;
      var param = para || self._getPara();
      if (arr && arr[0].dycfg.request === 'taobao') {
        var url = '//tce.taobao.com/api/mget.htm';
        var backupUrl = '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.taobao.com/api/mget.htm';
      } else if (arr && arr[0].dycfg.request === 'alicdn') {
        var url = '//tce.alicdn.com/api/mget.htm';
        var backupUrl = '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.alicdn.com/api/mget.htm';
      } else {
        var url = self.conf.request.url;
        var backupUrl = self.conf.request.backupUrl;
      }
      var success = function success(d) {
        self._assign(d, stack, function () {
          backupUrl && self._get(param, backupUrl, success);
          self[strPara] = true;
        }, para);
      };
      var userAjaxOnly;
      if (window.InitModeAjaxInTmsPreview) {
        userAjaxOnly = true;
      }
      if (stack && stack[0] && stack[0].dycfg && stack[0].dycfg.mode === 'mtop' && !userAjaxOnly && BaseApi.MTop) {
        self._mtopGet(param, url, success, function () {
          backupUrl && self._get(param, backupUrl, success, function () {
          });
          self[strPara] = true;
        });
      } else {
        self._get(param, url, success, function () {
          backupUrl && self._get(param, backupUrl, success, function () {
          });
          self[strPara] = true;
        });
      }
      if (!arr) {
        self._init();
        clearTimeout(self._timer);
      }
    },
    _mtopGet: function _mtopGet(para, url, success, error) {
      try {
        if (location.search.indexOf('testTcePre=true') > -1) {
          lib.mtop.config.prefix = 'api';
          lib.mtop.config.subDomain = 'wapa';
          lib.mtop.config.mainDomain = 'taobao.com';
        } else {
          if (para.env && para.env.indexOf('debug') > -1 && /\.alibaba-inc\./i.test(location.hostname)) {
            lib.mtop.config.prefix = 'api.m';
            lib.mtop.config.subDomain = 'tms';
            lib.mtop.config.mainDomain = 'alibaba-inc.com';
          } else if (para.env && para.env.indexOf('pre') > -1 && /\wapa.taobao\./i.test(location.hostname)) {
            lib.mtop.config.prefix = 'api';
            lib.mtop.config.subDomain = 'm';
            lib.mtop.config.mainDomain = 'taobao.com';
          }
        }
        var ajaxPara = BaseApi.clone(para);
        if (BaseApi.version === 'kimi') {
          ajaxPara.src = 'phone';
        }
        var paraStr = JSON.stringify(ajaxPara);
        BaseApi.MTop.request({
          AntiCreep: true,
          api: 'mtop.taobao.tceget.xget',
          v: '1.0',
          data: { 'd': paraStr },
          ecode: 0,
          dataType: 'jsonp',
          timeout: 20000
        }, function (resJson) {
          success && success(resJson.data);
        }, function (e) {
          error && error();
        });
      } catch (e) {
        error && error();
      }
    },
    _get: function _get(para, url, _success, _error) {
      var self = this, callback = self.conf.request.jsonp.callback, param = function param(para) {
          var str = [];
          for (var key in para) {
            var v = para[key];
            str.push(key + '=' + v);
          }
          return str.join('&');
        };
      if (self._stack.length > 0) {
        var cacheTime = self._stack[0].dycfg.cacheTime;
      } else {
        var cacheTime = false;
      }
      if (cacheTime && url.indexOf('dispatch') < 0) {
        var jsonpCallback = self._getCbName(para, url, cacheTime);
      } else {
        var jsonpCallback = 'jsonp' + BaseApi.guid();
      }
      var dataParam = {};
      if (BaseApi.version === 'kimi') {
        dataParam.src = 'phone';
      }
      BaseApi.sufei(function () {
        BaseApi.ajax({
          url: url + (url.indexOf('?') < 0 ? '?' : '&') + param(para),
          data: dataParam,
          dataType: 'jsonp',
          jsonpCallback: jsonpCallback,
          cache: true,
          scriptCharset: 'utf-8',
          timeout: self.conf.request.timeout,
          crossDomain: true,
          success: function success(data) {
            _success && _success(data);
          },
          error: function error() {
            _error && _error();
          }
        });
      });
      return self;
    },
    _getCbName: function _getCbName(para, url, cacheTime) {
      var self = this;
      var cb_name = 'jsonp';
      try {
        var tceSidArr = para.tce_sid.split(',');
        for (var i = 0, len = tceSidArr.length; i < len; i++) {
          cb_name += tceSidArr[i].slice(-2);
        }
        var disp = url.indexOf('dispatch') > -1 ? 'd' : 'n';
        cb_name += disp;
        cb_name += parseInt(+new Date() / cacheTime / 1000);
      } catch (e) {
        cb_name += BaseApi.guid();
      }
      return cb_name;
    },
    _assign: function _assign(d, stack, cb, para) {
      var self = this;
      var response = self.conf.response;
      var convert = response.convert;
      var resultPaths = response.path.split('.');
      var backupUrl = self.conf.request.backupUrl;
      var i, j, result, dataPaths, dataTemp, ajaxSuccess;
      var timestamp;
      var scheduleDate;
      var strPara = BaseApi.JSON.stringify(para);
      var needBackup = false;
      if (convert && convert.path) {
        dataPaths = convert.path.split('.');
        dataTemp = d;
        for (var key in dataPaths) {
          dataTemp = dataTemp[dataPaths[key]];
        }
        result = {};
        for (var key in dataPaths) {
          var v = dataPaths[key];
          result[self._valResponse(v, convert.key)] = v;
        }
        d = result;
      }
      timestamp = d.context && d.context.time || new Date().getTime() + '';
      try {
        var scheduleDateArr = location.search.match(new RegExp('[?&]scheduleDate=([^&]*)(&?)', 'i'));
        if (scheduleDateArr && scheduleDateArr[1]) {
          var scheduleDate = decodeURIComponent(scheduleDateArr[1]);
          var scheduleTime = scheduleDate.replace(/-/g, '/');
          timestamp = new Date(scheduleTime).getTime() + '';
        }
      } catch (e) {
      }
      for (i = 0; i < stack.length; i += 1) {
        result = d || [];
        for (j = 0; j < resultPaths.length; j += 1) {
          result = result[self._val(stack[i].para, resultPaths[j])] || [];
          if (j === 1) {
            ajaxSuccess = result.success;
          }
        }
        if (stack[i].count) {
          if (BaseApi.isArray(result)) {
            result = result.splice(0, stack[i].count);
          } else {
            result = [];
          }
        }
        if (BaseApi.isFunction(stack[i].cb)) {
          if (self[BaseApi.JSON.stringify(para)]) {
            if (!self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)]) {
              stack[i].cb(result, timestamp);
              self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)] = 'success';
            }
          } else {
            if (result.length > 0 && !self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)]) {
              stack[i].cb(result, timestamp);
              self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)] = 'success';
            } else if (result.length === 0 && stack[i].dycfg.backup === false) {
              stack[i].cb(result, timestamp);
              self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)] = 'success';
            } else if (result.length === 0 && ajaxSuccess && ajaxSuccess === 'true') {
              stack[i].cb(result, timestamp);
              self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)] = 'success';
            } else if (result.length === 0 && stack[i].dycfg.backup) {
              if (backupUrl) {
                needBackup = true;
              } else {
                stack[i].cb(result, timestamp);
                self._resultSuccess[BaseApi.JSON.stringify(stack[i].para)] = 'success';
              }
            }
          }
        }
      }
      if (needBackup) {
        cb && cb();
      }
    }
  };
  exports = GetHelper;
  return exports;
}();
kgXctrl660SrcModBaseApiKissy = function (exports) {
  'use strict';
  KISSY.getScript('//g.alicdn.com/sd/sufei/0.2.1/app/common/sufei-kissy.js');
  var version = KISSY && KISSY.version;
  var BaseApi = kgXctrl660SrcBaseApi;
  var LabApi;
  if (version <= 1.48) {
  } else {
  }
  var LabApi = {
    'merge': 'KISSY.merge',
    'mix': 'KISSY.mix',
    'guid': 'KISSY.guid',
    'clone': 'KISSY.clone'
  };
  for (var key in LabApi) {
    BaseApi[key] = eval(LabApi[key]);
  }
  var IO = io;
  var JSON = json;
  BaseApi.JSON = JSON;
  BaseApi.ajax = function (obj) {
    return IO(obj);
  };
  BaseApi.sufei = function (cb) {
    cb && cb();
  };
  BaseApi.version = 'kissy';
  window.XctrlBaseApi = BaseApi;
  return exports;
}();
kgXctrl660SrcApi = function (exports) {
  'use strict';
  var GetHelper = kgXctrl660SrcGetHelper;
  var g = {};
  var tms = {
    add: function add(name, para) {
      g[name] = new GetHelper(para);
      return g[name];
    },
    use: function use(name) {
      return g[name];
    },
    GetHelper: GetHelper
  };
  tms.add('tcepre', {
    'request': {
      'timeout': 5,
      'url': '//tce.taobao.org/api/teg.htm',
      'parameters': {
        'tce_sid': '${tce_sid}',
        'tce_vid': '${tce_vid}',
        'env': '${env}',
        'tid': '${tid}',
        'tab': '${tab}',
        'topic': '${topic}',
        'count': '${count}'
      },
      'charset': 'utf-8'
    },
    'response': { 'path': 'result' }
  });
  tms.add('tceplus', {
    'request': {
      'timeout': 5,
      'url': '//tce.taobao.com/api/teg.htm',
      'backupUrl': '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.taobao.com/api/teg.htm',
      'parameters': {
        'tce_sid': '${tce_sid}',
        'tce_vid': '${tce_vid}',
        'tid': '${tid}',
        'tab': '${tab}',
        'topic': '${topic}',
        'count': '${count}'
      },
      'charset': 'utf-8'
    },
    'response': { 'path': 'result' }
  });
  tms.add('tcedaily', {
    'request': {
      'timeout': 5,
      'url': '//tce.daily.taobao.net/api/mget.htm',
      'parameters': {
        'tce_sid': '${tce_sid}',
        'tce_vid': '${tce_vid}',
        'tid': '${tid}',
        'env': '${env}',
        'tab': '${tab}',
        'topic': '${topic}',
        'count': '${count}'
      },
      'mergeKey': 'tce_sid',
      'mergeCount': 'count',
      'charset': 'utf-8'
    },
    'response': { 'path': 'result.${tce_sid}.result' }
  });
  if (window.g_config && window.g_config.appId == 6) {
    var tbIndexInnerObj = {
      'request': {
        'timeout': 5,
        'cacheTime': 60,
        'url': '//tce.alicdn.com/api/mget.htm',
        'parameters': {
          'tce_sid': '${tce_sid}',
          'tce_vid': '${tce_vid}',
          'tid': '${tid}',
          'tab': '${tab}',
          'env': '${env}',
          'topic': '${topic}',
          'count': '${count}'
        },
        'mergeKey': 'tce_sid',
        'mergeCount': 'count',
        'charset': 'utf-8'
      },
      'response': { 'path': 'result.${tce_sid}.result' }
    };
    if (/testDispath=true/.test(location.search)) {
      tbIndexInnerObj.request.backupUrl = '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.alicdn.com/api/mget.htm';
    }
    tms.add('tceinner', tbIndexInnerObj);
    tms.add('tceonline', {
      'request': {
        'timeout': 5,
        'url': '//tce.alicdn.com/api/mget.htm',
        'backupUrl': '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.alicdn.com/api/mget.htm',
        'parameters': {
          'tce_sid': '${tce_sid}',
          'tce_vid': '${tce_vid}',
          'tid': '${tid}',
          'tab': '${tab}',
          'topic': '${topic}',
          'count': '${count}'
        },
        'cacheTime': 60,
        'mergeKey': 'tce_sid',
        'mergeCount': 'count',
        'charset': 'utf-8'
      },
      'response': { 'path': 'result.${tce_sid}.result' }
    });
  } else {
    tms.add('tceinner', {
      'request': {
        'timeout': 5,
        'url': '//tce.taobao.org/api/mget.htm',
        'parameters': {
          'tce_sid': '${tce_sid}',
          'tce_vid': '${tce_vid}',
          'tid': '${tid}',
          'tab': '${tab}',
          'env': '${env}',
          'topic': '${topic}',
          'count': '${count}'
        },
        'charset': 'utf-8'
      },
      'response': { 'path': 'result.${tce_sid}.result' }
    });
    tms.add('tceonline', {
      'request': {
        'timeout': 5,
        'url': 'https://tce.taobao.com/api/mget.htm',
        'backupUrl': 'https://www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.taobao.com/api/mget.htm',
        'parameters': {
          'tce_sid': '${tce_sid}',
          'tce_vid': '${tce_vid}',
          'tid': '${tid}',
          'tab': '${tab}',
          'topic': '${topic}',
          'count': '${count}'
        },
        'mergeKey': 'tce_sid',
        'mergeCount': 'count',
        'charset': 'utf-8'
      },
      'response': { 'path': 'result.${tce_sid}.result' }
    });
  }
  tms.add('tcecdn', {
    'request': {
      'timeout': 5,
      'url': '//tce.alicdn.com/api/mget.htm',
      'backupUrl': '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=http://tce.alicdn.com/api/mget.htm',
      'parameters': {
        'tce_sid': '${tce_sid}',
        'tce_vid': '${tce_vid}',
        'tid': '${tid}',
        'tab': '${tab}',
        'topic': '${topic}',
        'count': '${count}'
      },
      'mergeKey': 'tce_sid',
      'mergeCount': 'count',
      'charset': 'utf-8'
    },
    'response': { 'path': 'result.${tce_sid}.result' }
  });
  tms.add('tce', {
    'request': {
      'timeout': 5,
      'url': '//tce.taobao.com/api/get.htm',
      'backupUrl': '//www.taobao.com/go/rgn/sys/xctrl/dispatch.php?murl=//tce.taobao.com/api/get.htm',
      'parameters': {
        'tce_sid': '${tce_sid}',
        'tid': '${tid}',
        'tab': '${tab}',
        'topic': '${topic}',
        'count': '${count}'
      },
      'charset': 'utf-8'
    },
    'response': { 'path': 'result' }
  });
  exports = tms;
  return exports;
}();
kgXctrl660SrcBase = function (exports) {
  'use strict';
  var api = kgXctrl660SrcApi;
  var defaultConfig = {
    timeout: 3000,
    extra: {},
    mode: 'mtop',
    backup: true,
    merge: true
  };
  var BaseApi;
  function Multi(conf) {
    this.init(conf);
  }
  Multi.prototype = {
    init: function init(conf) {
      var self = this;
      BaseApi = window.XctrlBaseApi || {};
      var conf = BaseApi.merge(defaultConfig, conf);
      self.cfg = conf;
      self._stringfiyToResult(conf);
    },
    _stringfiyToResult: function _stringfiyToResult(conf) {
      var self = this;
      if (window.JSON) {
        var data = BaseApi.isString(conf.data) ? JSON.parse(conf.data) : conf.data;
      } else {
        var data = BaseApi.isString(conf.data) ? eval('(' + conf.data + ')') : conf.data;
      }
      var key = conf.key;
      var cb = conf.callback;
      var p = conf.extra;
      self.RequestFind = BaseApi.clone(data);
      if (BaseApi.isArray(key)) {
        conf.merge = true;
        if (key.length === 0) {
          cb(arr);
        } else {
          self.keyArrayResult = {};
          self.keyArrayIndex = 0;
          self.keyArrayLength = key.length;
          for (var i = 0, len = key.length; i < len; i++) {
            var sKey = key[i];
            var sArr = data[key[i]];
            self._getData(sArr, sKey, cb, p);
          }
        }
      } else if (BaseApi.isString(key)) {
        var arr = data[key];
        if (arr && BaseApi.isArray(arr) && arr.length !== 0) {
          self._getData(arr, key, cb, p);
        } else {
          cb(arr);
          if (!arr) {
          } else if (arr === '') {
          } else {
          }
        }
      }
    },
    _getData: function _getData(arrs, key, cb, p) {
      var self = this, apiType, cb_data = {};
      for (var index = 0, iLen = arrs.length; index < iLen; index++) {
        var obj = arrs[index];
        var type = obj.data_type;
        var para = obj.data_para;
        var request = obj.data_request;
        var next_key;
        var next_param;
        var requestData;
        for (var m in obj) {
          if (BaseApi.isArray(obj[m])) {
            next_key = m;
            next_param = obj[m];
          }
        }
        para = request ? self.checkRely(obj) : para;
        para = p ? BaseApi.merge(para, p) : para;
        if (type) {
          if (apiType = api.use(type)) {
            for (var i in para) {
              if (para.hasOwnProperty(i)) {
                try {
                  para[i] = unescape(para[i]);
                } catch (e) {
                }
                para[i] = encodeURIComponent(BaseApi.trim(para[i]));
              }
            }
            requestData = {
              arrs: arrs,
              request: request,
              next_key: next_key,
              next_param: next_param,
              cb_data: cb_data,
              key: key,
              cb: cb
            };
            apiType.push(para, function (rds, timestamp) {
              self._dataCallback(rds, timestamp, requestData);
            }, self.cfg);
          } else {
          }
        } else {
          var newobj = BaseApi.clone(obj);
          for (var m in obj) {
            if (BaseApi.isArray(obj[m])) {
              delete newobj[m];
              for (var i = 0, ilen = obj[m].length; i < ilen; i++) {
                var d = obj[m][i];
                d.data_request = newobj;
              }
            }
          }
        }
      }
      if (arrs[0].length === 0 || !arrs[0].data_type) {
        if (self.keyArrayLength) {
          self.keyArrayResult[key] = arrs;
          self.keyArrayIndex++;
          if (self.keyArrayIndex === self.keyArrayLength) {
            self.keyArrayResult.timestamp = '';
            self.keyArrayResult.isDynamic = false;
            cb && cb(self.keyArrayResult);
          }
        } else {
          cb_data[key] = arrs;
          cb_data.timestamp = '';
          cb_data.isDynamic = false;
          cb && cb(cb_data);
        }
      }
      return false;
    },
    _dataCallback: function _dataCallback(rds, timestamp, requestData) {
      var self = this;
      var arrs = requestData.arrs, request = requestData.request, next_key = requestData.next_key, next_param = requestData.next_param, cb_data = requestData.cb_data, key = requestData.key, cb = requestData.cb;
      if (rds && BaseApi.isArray(rds) && rds.length !== 0) {
        var rds = self._GetMsgWhitCommit(rds);
        for (var sI = 0, sLen = rds.length; sI < sLen; sI++) {
          var rd = rds[sI];
          if (request) {
            rd.data_request = request;
          }
          if (next_key) {
            next_param[0].data_request = BaseApi.clone(rd);
            rd[next_key] = next_param;
          }
          arrs[sI] = BaseApi.clone(rd);
        }
      } else {
        arrs = [];
      }
      if (self.keyArrayLength) {
        self.keyArrayResult[key] = arrs;
        self.keyArrayIndex++;
        if (self.keyArrayIndex === self.keyArrayLength) {
          self.keyArrayResult.timestamp = timestamp;
          self.keyArrayResult.isDynamic = true;
          cb && cb(self.keyArrayResult);
        }
      } else {
        cb_data[key] = arrs;
        cb_data.timestamp = timestamp;
        cb_data.isDynamic = true;
        cb && cb(cb_data);
      }
    },
    _toEachArr: function _toEachArr(arr, key, cb) {
      var self = this;
      self.promise[key] = {};
      self.promise[key].get = 0;
      self.promise[key].len = arr.length;
      self._postRequst(arr, key, cb);
    },
    _GetMsgWhitCommit: function _GetMsgWhitCommit(rds) {
      var self = this, rdata = BaseApi.clone(rds), requestMsg = self.RequestFind;
      if (requestMsg.moduleinfo) {
        return rdata;
      }
      function xcreplace(arr, config) {
        var key;
        for (var i = 0, len = arr.length; i < len; i++) {
          var rd = arr[i], istrue = true;
          for (var k in rd) {
            if (BaseApi.isString(rd[k]) && config[k] !== rd[k]) {
              istrue = false;
            }
            if (BaseApi.isArray(rd[k])) {
              key = k;
            }
          }
          if (istrue && key) {
            arr = rd[key];
            break;
          }
        }
        if (!istrue || !key) {
          var arr = checkCatId(arr, config);
        }
        return arr;
      }
      function checkCatId(arr, config) {
        var key;
        for (var i = 0, len = arr.length; i < len; i++) {
          var rd = arr[i], istrue = false;
          for (var k in rd) {
            if (k === 'cat_id' && rd[k] === config[k]) {
              istrue = true;
            }
            if (BaseApi.isArray(rd[k])) {
              key = k;
            }
          }
          if (istrue && key) {
            arr = rd[key];
            break;
          }
        }
        return arr;
      }
      if (requestMsg.data_request) {
        var r_msg = requestMsg.data_request, r_data = xcreplace(rdata, r_msg);
        rdata = xcreplace(r_data, requestMsg);
      } else {
        rdata = xcreplace(rdata, requestMsg);
      }
      return rdata;
    },
    checkRely: function checkRely(obj) {
      var para = obj.data_para;
      for (var key in para) {
        var p = decodeURIComponent(para[key]), reg = /@/g, c = p.match(reg), len = c ? c.length : 0, n_p = null;
        if (len > 0) {
          var k = p.replace(reg, '');
          for (var i = 0; i < len; i++) {
            if (n_p) {
              n_p = n_p.data_request;
            } else {
              n_p = obj.data_request;
            }
          }
          para[key] = n_p[k];
        }
      }
      return para;
    },
    log: function log(o) {
      window.console && console.log(o);
    }
  };
  var XCtrl;
  XCtrl = {
    dynamic: function dynamic(conf, key, callback, extra) {
      if (arguments.length > 1) {
        new Multi({
          data: conf,
          key: key,
          callback: callback,
          extra: extra
        });
      } else {
        new Multi(arguments[0]);
      }
    },
    Dynamic: Multi
  };
  exports = XCtrl;
  return exports;
}();
kgXctrl660XctrlKissy = function (exports) {
  'use strict';
  var XCtrl = kgXctrl660SrcBase;
  exports = XCtrl;
  return exports;
}();
module.exports = kgXctrl660XctrlKissy;
});